#!/usr/bin/python

import sys

print 'Number of arguments:', len(sys.argv), 'arguments.'
print sys.argv[0]
print type(sys.argv[0])
print sys.argv[1]
print type(sys.argv[1])

$ python test.py 200 100 0.00001
Number of arguments: 4 arguments.
test.py
<type 'str'>
200
<type 'str'>

Ref: https://github.com/pytorch/examples/blob/master/imagenet/main.py
import argparse
parser = argparse.ArgumentParser()
parser.add_argument('data', metavar='DIR',
                    help='path to dataset')
parser.add_argument('--epochs', default=90, type=int, metavar='N',
                    help='number of total epochs to run')
parser.add_argument('--pretrained', dest='pretrained', action='store_true',
                    help='use pre-trained model')
def main():
    args = parser.parse_args()
    main_worker(args.gpu, ngpus_per_node, args)
    
def main_worker(gpu, ngpus_per_node, args):
    if args.pretrained:
      
if __name__ == '__main__':
    main()
    
For positional arguments (the one without - or --) to a Python function, the order matters. 
The first value passed from the command line becomes the first positional argument
    

